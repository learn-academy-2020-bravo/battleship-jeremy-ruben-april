{"ast":null,"code":"var _jsxFileName = \"/Users/learnacademy/Desktop/battleship-jeremy-ruben-april/src/App.js\";\nimport React, { Component } from 'react';\nimport Square from './components/Square';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = (value, index) => {\n      let {\n        squares\n      } = this.state;\n      let {\n        torpIndexes\n      } = this.state;\n      let {\n        missCounter\n      } = this.state;\n      let {\n        hitCounter\n      } = this.state;\n      let {\n        shipIndexes\n      } = this.state;\n      let {\n        sunkShip\n      } = this.state;\n      let {\n        missed\n      } = this.state;\n      let {\n        won\n      } = this.state;\n\n      if (shipIndexes.includes(index) && !torpIndexes.includes(index) && !won) {\n        squares[index] = \"☠️\";\n        torpIndexes.push(index);\n        hitCounter--;\n        hitCounter > 0 ? sunkShip = true : sunkShip = false;\n        missed = false;\n      } else if (!torpIndexes.includes(index) && !won) {\n        squares[index] = \"💨\";\n        torpIndexes.push(index);\n        missCounter++;\n        sunkShip = false;\n        missed = true;\n      }\n\n      this.setState({\n        squares,\n        torpIndexes,\n        missCounter,\n        hitCounter,\n        sunkShip,\n        missed\n      });\n\n      if (hitCounter === 0) {\n        won = true;\n      }\n\n      this.setState({\n        won\n      });\n    };\n\n    this.reset = () => {\n      this.setState({\n        squares: [],\n        torpIndexes: [],\n        shipIndexes: [],\n        missCounter: 0,\n        hitCounter: 5,\n        sunkShip: false,\n        won: false,\n        missed: false\n      });\n      this.componentDidMount();\n    };\n\n    this.state = {\n      squares: [],\n      torpIndexes: [],\n      shipIndexes: [],\n      missCounter: 0,\n      hitCounter: 5,\n      sunkShip: false,\n      won: false,\n      missed: false\n    };\n  }\n\n  componentDidMount() {\n    let squares = [];\n\n    for (let i = 0; i < 100; i++) squares.push(\"🌊\");\n\n    let shipIndexes = [];\n\n    while (shipIndexes.length < 5) {\n      let r = Math.floor(Math.random() * 100);\n      if (shipIndexes.indexOf(r) === -1) shipIndexes.push(r);\n    }\n\n    shipIndexes.map(index => {\n      return squares[index] = \"🚢\";\n    });\n    this.setState({\n      squares: squares,\n      shipIndexes: shipIndexes\n    });\n    console.log(shipIndexes);\n  }\n\n  render() {\n    let squares = this.state.squares.map((value, index) => {\n      return /*#__PURE__*/React.createElement(Square, {\n        value: value,\n        index: index,\n        key: index,\n        squares: this.state.squares,\n        handleClick: this.handleClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }, \"Battleship App\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, this.state.won && \"You destroyed all the battleships!\", this.state.sunkShip && \"You hit a battleship!\", this.state.missed && \"You missed!\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, squares), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, \" Misses: \", this.state.missCounter, \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 52\n      }\n    }), \" Battleships left: \", this.state.hitCounter), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"reset\",\n      onClick: this.reset,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, \"Reset\")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/learnacademy/Desktop/battleship-jeremy-ruben-april/src/App.js"],"names":["React","Component","Square","App","constructor","props","handleClick","value","index","squares","state","torpIndexes","missCounter","hitCounter","shipIndexes","sunkShip","missed","won","includes","push","setState","reset","componentDidMount","i","length","r","Math","floor","random","indexOf","map","console","log","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Square from './components/Square'\nimport './App.css'\n\nclass App extends Component{\n  constructor(props) {\n    super(props)\n      this.state = {\n        squares: [],\n        torpIndexes: [],\n        shipIndexes: [],\n        missCounter: 0,\n        hitCounter: 5,\n        sunkShip: false,\n        won: false,\n        missed: false\n      }\n  }\n\n  componentDidMount() {\n    let squares = []\n    for (let i=0; i<100; i++) squares.push(\"🌊\")\n    let shipIndexes = []\n    while(shipIndexes.length < 5){\n      let r = Math.floor(Math.random() * 100)\n      if(shipIndexes.indexOf(r) === -1) shipIndexes.push(r)\n    }\n    shipIndexes.map(index => {\n      return squares[index] = \"🚢\"\n    })\n    this.setState({\n      squares: squares,\n      shipIndexes: shipIndexes\n    })\n    console.log(shipIndexes)\n  }\n\n  handleClick = (value, index) => {\n    let { squares } = this.state\n    let { torpIndexes } = this.state\n    let { missCounter } = this.state\n    let { hitCounter } = this.state\n    let { shipIndexes } = this.state\n    let { sunkShip } = this.state\n    let { missed } = this.state\n    let { won } = this.state\n    if (shipIndexes.includes(index) && !torpIndexes.includes(index) && !won) {\n      squares[index] = \"☠️\"\n      torpIndexes.push(index)\n      hitCounter--\n      hitCounter > 0 ? sunkShip = true : sunkShip = false\n      missed = false\n    }\n    else if (!torpIndexes.includes(index) && !won) {\n      squares[index] = \"💨\"\n      torpIndexes.push(index)\n      missCounter++\n      sunkShip = false\n      missed = true\n    }\n    this.setState({ squares, torpIndexes, missCounter, hitCounter, sunkShip, missed })\n    if (hitCounter === 0) {\n      won = true\n    }\n    this.setState({ won })\n  }\n\n  reset = () => {\n    this.setState({\n      squares: [],\n      torpIndexes: [],\n      shipIndexes: [],\n      missCounter: 0,\n      hitCounter: 5,\n      sunkShip: false,\n      won: false,\n      missed: false\n    })\n    this.componentDidMount()\n  }\n\n  render(){\n    let squares = this.state.squares.map((value, index) => {\n      return(\n        <Square\n          value = { value }\n          index = { index }\n          key = { index }\n          squares = { this.state.squares }\n          handleClick = { this.handleClick }\n        />\n      )\n    })\n\n\n    return(\n      <>\n        <div id=\"body\">\n          <h1>Battleship App</h1>\n          <div id=\"message\">\n          {this.state.won && \"You destroyed all the battleships!\"}\n          {this.state.sunkShip && \"You hit a battleship!\"}\n          {this.state.missed && \"You missed!\"}\n          </div>\n          <div id=\"board\">\n            { squares }\n          </div>\n          <div> Misses: { this.state.missCounter } <br/> Battleships left: { this.state.hitCounter }</div>\n          <button id=\"reset\" onClick = { this.reset }>Reset</button>\n        </div>\n      </>\n    )\n  }\n}\nexport default App\n"]},"metadata":{},"sourceType":"module"}