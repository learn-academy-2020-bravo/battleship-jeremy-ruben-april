{"ast":null,"code":"var _jsxFileName = \"/Users/learnacademy/Desktop/battleship-jeremy-ruben-april/src/App.js\";\nimport React, { Component } from 'react';\nimport Square from './components/Square';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = (value, index) => {\n      let {\n        squares\n      } = this.state;\n      let {\n        torpIndexes\n      } = this.state;\n      let {\n        turns\n      } = this.state;\n      let {\n        hitCounter\n      } = this.state;\n      let {\n        shipIndexes\n      } = this.state;\n\n      if (shipIndexes.includes(index) && !torpIndexes.includes(index)) {\n        torpIndexes.push(index);\n        turns++;\n        hitCounter++;\n      } else if (!torpIndexes.includes(index)) {\n        torpIndexes.push(index);\n        turns++;\n      }\n\n      squares[index] = \"ðŸ’¨\";\n      this.setState({\n        squares: squares,\n        torpIndexes: torpIndexes,\n        turns: turns,\n        hitCounter: hitCounter\n      });\n    };\n\n    this.state = {\n      squares: [],\n      torpIndexes: [],\n      shipIndexes: [],\n      turns: 0,\n      hitCounter: 0\n    };\n  }\n\n  componentDidMount() {\n    let squares = [];\n\n    for (let i = 0; i < 100; i++) squares.push(\"ðŸŒŠ\");\n\n    let shipIndexes = [];\n\n    while (shipIndexes.length < 5) {\n      let r = Math.floor(Math.random() * 100);\n      if (shipIndexes.indexOf(r) === -1) shipIndexes.push(r);\n    }\n\n    shipIndexes.map(index => {\n      return squares[index] = \"ðŸš¢\";\n    });\n    this.setState({\n      squares: squares,\n      shipIndexes: shipIndexes\n    });\n  }\n\n  render() {\n    let squares = this.state.squares.map((value, index) => {\n      return /*#__PURE__*/React.createElement(Square, {\n        value: value,\n        index: index,\n        key: index,\n        squares: this.state.squares,\n        handleClick: this.handleClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, \"Battleship App\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, squares), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, \" \", this.state.turns, \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 38\n      }\n    }), \" \", this.state.hitCounter)));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/learnacademy/Desktop/battleship-jeremy-ruben-april/src/App.js"],"names":["React","Component","Square","App","constructor","props","handleClick","value","index","squares","state","torpIndexes","turns","hitCounter","shipIndexes","includes","push","setState","componentDidMount","i","length","r","Math","floor","random","indexOf","map","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Square from './components/Square'\nimport './App.css'\n\nclass App extends Component{\n  constructor(props) {\n    super(props)\n      this.state = {\n        squares: [],\n        torpIndexes: [],\n        shipIndexes: [],\n        turns: 0,\n        hitCounter: 0\n      }\n  }\n\n  componentDidMount() {\n    let squares = []\n    for (let i=0; i<100; i++) squares.push(\"ðŸŒŠ\")\n    let shipIndexes = []\n    while(shipIndexes.length < 5){\n      let r = Math.floor(Math.random() * 100)\n      if(shipIndexes.indexOf(r) === -1) shipIndexes.push(r)\n    }\n    shipIndexes.map(index => {\n      return squares[index] = \"ðŸš¢\"\n    })\n    this.setState({\n      squares: squares,\n      shipIndexes: shipIndexes\n    })\n  }\n\n  handleClick = (value, index) => {\n    let { squares } = this.state\n    let { torpIndexes } = this.state\n    let { turns } = this.state\n    let { hitCounter } = this.state\n    let { shipIndexes } = this.state\n    if (shipIndexes.includes(index) && !torpIndexes.includes(index)) {\n      torpIndexes.push(index)\n      turns++\n      hitCounter++\n    }\n    else if (!torpIndexes.includes(index)) {\n      torpIndexes.push(index)\n      turns++\n    }\n    squares[index] = \"ðŸ’¨\"\n    this.setState({\n      squares: squares,\n      torpIndexes: torpIndexes,\n      turns: turns,\n      hitCounter: hitCounter\n    })\n  }\n\n  reset\n\n  render(){\n    let squares = this.state.squares.map((value, index) => {\n      return(\n        <Square\n          value = { value }\n          index = { index }\n          key = { index }\n          squares = { this.state.squares }\n          handleClick = { this.handleClick }\n        />\n      )\n    })\n    return(\n      <>\n        <div id=\"body\">\n          <h1>Battleship App</h1>\n          <div id=\"board\">\n            { squares }\n          </div>\n          <div> { this.state.turns } <br/> { this.state.hitCounter }</div>\n\n        </div>\n      </>\n    )\n  }\n}\nexport default App\n"]},"metadata":{},"sourceType":"module"}